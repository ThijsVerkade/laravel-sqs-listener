name: CI Pipeline

on:
  push:
    branches:
      - '**'
  pull_request:

jobs:
  composer:
    name: Install Dependencies
    runs-on: ubuntu-latest
    container:
      image: lorisleiva/laravel-docker:8.3  # Make sure this image has PHP 8.3
    steps:
      - uses: actions/checkout@v3
      - name: Install Composer Dependencies
        run: composer install --prefer-dist --no-ansi --no-interaction --no-progress --no-scripts

  code-style:
    name: Code Style Check
    runs-on: ubuntu-latest
    needs: composer
    steps:
      - uses: actions/checkout@v3
      - name: Run Code Style Check
        run: composer code-style -- --report=junit --report-file=build/code-style-report.xml
      - name: Upload Code Style Report
        uses: actions/upload-artifact@v3
        with:
          name: code-style-report
          path: build/code-style-report.xml

  static-analysis:
    name: Static Analysis
    runs-on: ubuntu-latest
    needs: composer
    steps:
      - uses: actions/checkout@v3
      - name: Run Static Analysis
        run: composer static-analysis -- --error-format gitlab > build/phpstan-report.json
      - name: Upload Static Analysis Report
        uses: actions/upload-artifact@v3
        with:
          name: static-analysis-report
          path: build/phpstan-report.json

  security:
    name: Security Check
    runs-on: ubuntu-latest
    needs: composer
    steps:
      - uses: actions/checkout@v3
      - name: Run Security Check
        run: composer vulnerabilities-check

  unit-testing:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: composer
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-
      - name: Run Unit Tests
        run: |
          mkdir -p build
          composer unit-test -- --coverage-text --coverage-cobertura=build/coverage.cobertura.xml --coverage-clover=build/unit-test-coverage.xml
      - name: Upload Unit Test Coverage Report
        uses: actions/upload-artifact@v3
        with:
          name: unit-test-coverage
          path: build/unit-test-coverage.xml

  feature-testing:
    name: Feature Tests
    runs-on: ubuntu-latest
    needs: composer
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-
      - name: Run Feature Tests
        run: |
          mkdir -p build
          composer feature-test -- --coverage-text --coverage-cobertura=build/coverage.cobertura.xml --coverage-clover=build/feature-test-coverage.xml
      - name: Upload Feature Test Coverage Report
        uses: actions/upload-artifact@v3
        with:
          name: feature-test-coverage
          path: build/feature-test-coverage.xml